<!DOCTYPE html>
<html xmlns:v-on="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Crypto Kitty Data</title>
    <link rel="stylesheet" href="css/main.css">
    <script type="application/javascript" src="https://cdn.jsdelivr.net/npm/vue@2.5.13/dist/vue.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script
            src="https://code.jquery.com/jquery-3.3.1.min.js"
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
            crossorigin="anonymous"></script>
</head>
<body>
<section class="hero is-danger is-bold">
    <div class="hero-body">
        <div class="container">
            <h1 class="title">
                Kitty Battle Zone
            </h1>
            <h2 class="subtitle">
                Enter the Fray
            </h2>
        </div>
    </div>
</section>
<div class="columns" id="app">
    <div class="column is-3-desktop">

    </div>
    <div class="column is-6-desktop">
        {% include "battlezone/partials/connection.html.twig" %}
        {% include "battlezone/partials/registration.html.twig" %}
        {% include "battlezone/partials/results.html.twig" %}
        {% include "battlezone/partials/battle.html.twig" %}
        {% include "battlezone/partials/queue.html.twig" %}
    </div>
    <div class="column">

    </div>
</div>

<script type="application/javascript">
var app = new Vue({
    el: '#app',
    data: {
        page : 'connection',

        service : true,
        conn : null,
        profile : '',
        turn : false,
        signedIn : false,
        skill1 : true,
        skill2 : true,
        skill3 : true,
        battle : {

        },
        kitties : [],
        selectionPage : 0,
        selectionLimit : 20,
        selectionOffset: 0,
        web3 : {}
    },
    methods: {
        skill1 : function () {
            this.conn.send(JSON.stringify({
                command : "TakeTurn",
                skill : 1
            }));
        },
        skill2 : function () {
            this.conn.send(JSON.stringify({
                command : "TakeTurn",
                skill : 2
            }));
        },
        skill3 : function () {
            this.conn.send(JSON.stringify({
                command : "TakeTurn",
                skill : 3
            }));
        },
        login : function () {
            // this.conn.send(JSON.stringify({
            //     command : "IdentifyPlayer",
            //     address : this.profile,
            //     kittyId : 1
            // }));

            web3.eth.sign(this.profile,web3.toHex("Crypto Kitty Battles"), function (err,res) {
                if (!err) {
                    this.signedIn = true;
                    this.page = 'registration';
                }
            });
        },
        connect : function () {
            this.service = true;

            this.conn = new WebSocket('ws://dna.kitty.fyi:8080/battle');

            this.conn.onmessage = function (ev) {
                app.turn = ev.turn;
            };

            this.conn.onopen = function (ev) {

            };

            this.conn.onerror = function (ev) {
                app.service = false;
            };

            this.conn.onclose = function (ev) {
                if (ev.code !== 3001) {
                    app.service = false;
                }
            };
        },
        loadingKitties : function () {

            var $kitties = 'https://api.cryptokitties.co/kitties?limit='+this.selectionLimit+'&owner_wallet_address='+this.profile+'&offset='+this.selectionOffset;
        }
    },
    mounted : function () {
        this.connect();

        this.$nextTick(function () {
            if (typeof web3 !== 'undefined') {
                this.profile = web3.eth.accounts[0];
            }
        });

    }
});
</script>
</body>
</html>



